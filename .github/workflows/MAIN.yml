# GitHub Action for generating a contribution graph with a snake eating your contributions.

name: Generate Snake

# Controls when the action will run. This action runs every 6 hours.
on:
  schedule:
    # Run every 6 hours
    - cron: "0 */6 * * *"
  
  # Allows you to run the workflow manually from the Actions tab
  workflow_dispatch:

# The sequence of runs in this workflow
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Check out the repository so the job can access it
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Generate the snake
      - name: Generate Snake Contribution Graph
        uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: gauravshukla111
          # These next 2 lines generate the files on a branch called "output". This keeps the main branch clean.
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      # Step 3: Check the status of the repository to help with debugging if needed
      - name: Check Git Status
        run: git status

      # Step 4: Push the generated snake graph to the 'output' branch
      - name: Push Changes to Output Branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: output  # Make sure the output branch exists, or it will be created
          force: true

      # Step 5: Deploy the snake graph to GitHub Pages
      - name: Deploy Snake to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # The output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
